{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\my-app\\\\src\\\\components\\\\AuthForms\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport './RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm({\n  toggleForm\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [selectedAvatar, setSelectedAvatar] = useState('/avatars/avatar1.png');\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert('Пароли не совпадают');\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      await updateProfile(userCredential.user, {\n        displayName: email,\n        photoURL: selectedAvatar\n      });\n      console.log('Пользователь зарегистрирован с аватаром');\n    } catch (error) {\n      console.error('Ошибка регистрации:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-options\",\n          children: ['avatar1.png', 'avatar2.png', 'avatar3.png'].map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/avatars/${file}`,\n            alt: \"avatar\",\n            className: `avatar-thumb ${selectedAvatar === `/avatars/${file}` ? 'selected' : ''}`,\n            onClick: () => setSelectedAvatar(`/avatars/${file}`)\n          }, file, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"switch-link\",\n        children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: toggleForm,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"j4o2kpIn3I4cVYcGeF1sk4qFdIc=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","updateProfile","auth","jsxDEV","_jsxDEV","RegisterForm","toggleForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","selectedAvatar","setSelectedAvatar","handleRegister","e","preventDefault","alert","userCredential","user","displayName","photoURL","console","log","error","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","file","src","alt","onClick","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/arman/my-app/src/components/AuthForms/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\nimport './RegisterForm.css';\r\n\r\nfunction RegisterForm({ toggleForm }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [selectedAvatar, setSelectedAvatar] = useState('/avatars/avatar1.png');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Пароли не совпадают');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n      await updateProfile(userCredential.user, {\r\n        displayName: email,\r\n        photoURL: selectedAvatar,\r\n      });\r\n\r\n      console.log('Пользователь зарегистрирован с аватаром');\r\n    } catch (error) {\r\n      console.error('Ошибка регистрации:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <form className=\"register-form\" onSubmit={handleRegister}>\r\n\r\n        <div className=\"avatar-selection\">\r\n          <label>Выберите аватар:</label>\r\n          <div className=\"avatar-options\">\r\n            {['avatar1.png', 'avatar2.png', 'avatar3.png'].map((file) => (\r\n              <img\r\n                key={file}\r\n                src={`/avatars/${file}`}\r\n                alt=\"avatar\"\r\n                className={`avatar-thumb ${selectedAvatar === `/avatars/${file}` ? 'selected' : ''}`}\r\n                onClick={() => setSelectedAvatar(`/avatars/${file}`)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Подтвердите пароль\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Зарегистрироваться</button>\r\n        <p className=\"switch-link\">\r\n          У вас уже есть аккаунт? <span onClick={toggleForm}>Войти</span>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}