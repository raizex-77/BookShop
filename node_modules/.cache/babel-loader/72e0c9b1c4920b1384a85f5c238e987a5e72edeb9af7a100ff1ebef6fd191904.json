{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\my-app\\\\src\\\\components\\\\AuthForms\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm({\n  toggleForm\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      return setError(\"Пароли не совпадают\");\n    }\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      console.log(\"Регистрация успешна\");\n    } catch (err) {\n      setError(\"Ошибка регистрации\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"auth-link\",\n        onClick: () => toggleForm(true),\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"ZUAC2wEtQMgh2ing9stAYag1p5c=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","RegisterForm","toggleForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handleRegister","e","preventDefault","console","log","err","onSubmit","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/arman/my-app/src/components/AuthForms/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\n\r\nfunction RegisterForm({ toggleForm }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      return setError(\"Пароли не совпадают\");\r\n    }\r\n\r\n    try {\r\n      await createUserWithEmailAndPassword(auth, email, password);\r\n      console.log(\"Регистрация успешна\");\r\n    } catch (err) {\r\n      setError(\"Ошибка регистрации\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleRegister} className=\"auth-form\">\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Пароль\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Подтвердите пароль\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Зарегистрироваться</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <p>\r\n        У вас уже есть аккаунт?{' '}\r\n        <span className=\"auth-link\" onClick={() => toggleForm(true)}>Войти</span>\r\n      </p>\r\n    </form>\r\n\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}