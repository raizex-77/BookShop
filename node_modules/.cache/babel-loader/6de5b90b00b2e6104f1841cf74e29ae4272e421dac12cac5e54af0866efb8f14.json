{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arman\\\\my-app\\\\src\\\\components\\\\AuthForms\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../../firebase';\nimport './RegisterForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [selectedAvatar, setSelectedAvatar] = useState('/avatars/avatar1.png');\nfunction RegisterForm({\n  toggleForm\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [avatar, setAvatar] = useState(null);\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Пароли не совпадают\");\n      return;\n    }\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      await updateProfile(userCredential.user, {\n        displayName: email,\n        photoURL: selectedAvatar // Сохраняем ссылку на выбранный аватар\n      });\n      console.log('Пользователь зарегистрирован с аватаром');\n    } catch (error) {\n      console.error('Ошибка регистрации:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"avatar-upload\",\n        className: \"avatar-circle\",\n        children: avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          alt: \"avatar\",\n          className: \"avatar-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-options\",\n          children: ['avatar1.png', 'avatar2.png', 'avatar3.png'].map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/avatars/${file}`,\n            alt: \"avatar\",\n            className: `avatar-thumb ${selectedAvatar === `/avatars/${file}` ? 'selected' : ''}`,\n            onClick: () => setSelectedAvatar(`/avatars/${file}`)\n          }, file, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"switch-link\",\n          children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \", /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: toggleForm,\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"krGWKaJaD9Ro8WmHfWXU99zzSNE=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","createUserWithEmailAndPassword","auth","jsxDEV","_jsxDEV","selectedAvatar","setSelectedAvatar","RegisterForm","toggleForm","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","avatar","setAvatar","handleRegister","e","preventDefault","alert","userCredential","updateProfile","user","displayName","photoURL","console","log","error","message","className","children","htmlFor","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","file","onClick","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/arman/my-app/src/components/AuthForms/RegisterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { auth } from '../../firebase';\r\nimport './RegisterForm.css';\r\n\r\nconst [selectedAvatar, setSelectedAvatar] = useState('/avatars/avatar1.png');\r\n\r\nfunction RegisterForm({ toggleForm }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [avatar, setAvatar] = useState(null);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Пароли не совпадают\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n      await updateProfile(userCredential.user, {\r\n        displayName: email,\r\n        photoURL: selectedAvatar, // Сохраняем ссылку на выбранный аватар\r\n      });\r\n\r\n      console.log('Пользователь зарегистрирован с аватаром');\r\n    } catch (error) {\r\n      console.error('Ошибка регистрации:', error.message);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-content\">\r\n\r\n        <label htmlFor=\"avatar-upload\" className=\"avatar-circle\">\r\n          {avatar ? (\r\n            <img src={avatar} alt=\"avatar\" className=\"avatar-preview\" />\r\n          ) : (\r\n            <span>+</span>\r\n          )}\r\n        </label>\r\n\r\n        \r\n        <div className=\"avatar-selection\">\r\n          <label>Выберите аватар:</label>\r\n          <div className=\"avatar-options\">\r\n            {['avatar1.png', 'avatar2.png', 'avatar3.png'].map((file) => (\r\n              <img\r\n                key={file}\r\n                src={`/avatars/${file}`}\r\n                alt=\"avatar\"\r\n                className={`avatar-thumb ${selectedAvatar === `/avatars/${file}` ? 'selected' : ''}`}\r\n                onClick={() => setSelectedAvatar(`/avatars/${file}`)}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <form className=\"register-form\" onSubmit={handleRegister}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Подтвердите пароль\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n          <p className=\"switch-link\">\r\n            У вас уже есть аккаунт? <span onClick={toggleForm}>Войти</span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}